# Generated by Django 4.2.16 on 2025-09-18 02:52

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('user_code', models.CharField(blank=True, max_length=10, null=True)),
                ('reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('reset_token_expiry', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('channel_no', models.IntegerField(blank=True, null=True)),
                ('invoice_number', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(blank=True, max_length=20, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_refund', models.BooleanField(default=False)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('refund_note', models.TextField(blank=True, null=True)),
                ('doctor_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('branch_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=255, unique=True)),
                ('bank_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=255)),
                ('location', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('brand_type', models.CharField(choices=[('frame', 'Frame Brand'), ('lens', 'Lens Brand'), ('both', 'Both Frame & Lens')], default='both', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BusSystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Coating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='api.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DailyCashInHandRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_id', models.IntegerField()),
                ('date', models.DateField()),
                ('cash_in_hand', models.DecimalField(decimal_places=2, max_digits=10)),
                ('before_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('today_balance', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('specialization', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_info', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable')], default='available', max_length=20)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseMainCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalLens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branded', models.CharField(choices=[('branded', 'Branded'), ('non_branded', 'Non-Branded')], max_length=20)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='external_lenses', to='api.branch')),
            ],
            options={
                'verbose_name': 'External Lens',
                'verbose_name_plural': 'External Lenses',
                'ordering': ['lens_type', 'coating'],
            },
        ),
        migrations.CreateModel(
            name='ExternalLensBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalLensCoating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_type', models.CharField(choices=[('branded', 'Branded'), ('non_branded', 'Non-Branded')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('size', models.CharField(max_length=50)),
                ('species', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='api.brand')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='api.code')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='api.color')),
            ],
        ),
        migrations.CreateModel(
            name='FrameImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=api.models.FrameImage.get_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HearingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('warranty', models.CharField(max_length=30)),
                ('code', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Lens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lenses', to='api.brand')),
                ('coating', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lenses', to='api.coating')),
                ('initial_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initial_lense', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='LensCleaner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgent', models.BooleanField(default=False)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('order_updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('sub_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_remark', models.TextField(blank=True, null=True)),
                ('pd', models.CharField(blank=True, max_length=5, null=True)),
                ('height', models.CharField(blank=True, max_length=5, null=True)),
                ('right_height', models.CharField(blank=True, max_length=5, null=True)),
                ('left_height', models.CharField(blank=True, max_length=5, null=True)),
                ('left_pd', models.CharField(blank=True, max_length=5, null=True)),
                ('right_pd', models.CharField(blank=True, max_length=5, null=True)),
                ('fitting_on_collection', models.BooleanField(default=False)),
                ('on_hold', models.BooleanField(default=False)),
                ('user_date', models.DateField(blank=True, null=True)),
                ('is_frame_only', models.BooleanField(default=False)),
                ('is_refund', models.BooleanField(default=False)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('refund_note', models.TextField(blank=True, null=True)),
                ('issued_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('fitting_status', models.CharField(choices=[('pending', 'Pending'), ('fitting_ok', 'Fitting Ok'), ('not_fitting', 'Not Fitting'), ('damage', 'Damage')], default='Pending', max_length=20)),
                ('fitting_status_updated_date', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.branch')),
                ('bus_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='api.bussystemsetting')),
            ],
        ),
        migrations.CreateModel(
            name='OtherIncomeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('extra_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('nic', models.CharField(blank=True, max_length=15, null=True)),
                ('patient_note', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethodBanks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account_no', models.CharField(max_length=50)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('cash', 'Cash'), ('online_transfer', 'Online Transfer')], max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_method_banks', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Power',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Refraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refraction_number', models.CharField(blank=True, max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refractions', to='api.branch')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refractions', to='api.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RefractionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_manual', models.BooleanField(default=False)),
                ('hb_rx_right_dist', models.CharField(blank=True, max_length=20, null=True)),
                ('hb_rx_left_dist', models.CharField(blank=True, max_length=20, null=True)),
                ('hb_rx_right_near', models.CharField(blank=True, max_length=20, null=True)),
                ('hb_rx_left_near', models.CharField(blank=True, max_length=20, null=True)),
                ('auto_ref_right', models.CharField(blank=True, max_length=20, null=True)),
                ('auto_ref_left', models.CharField(blank=True, max_length=20, null=True)),
                ('ntc_right', models.CharField(blank=True, max_length=20, null=True)),
                ('ntc_left', models.CharField(blank=True, max_length=20, null=True)),
                ('va_without_glass_right', models.CharField(blank=True, max_length=20, null=True)),
                ('va_without_glass_left', models.CharField(blank=True, max_length=20, null=True)),
                ('va_without_ph_right', models.CharField(blank=True, max_length=20, null=True)),
                ('va_without_ph_left', models.CharField(blank=True, max_length=20, null=True)),
                ('va_with_glass_right', models.CharField(blank=True, max_length=20, null=True)),
                ('va_with_glass_left', models.CharField(blank=True, max_length=20, null=True)),
                ('right_eye_dist_sph', models.CharField(blank=True, max_length=10, null=True)),
                ('right_eye_dist_cyl', models.CharField(blank=True, max_length=10, null=True)),
                ('right_eye_dist_axis', models.CharField(blank=True, max_length=10, null=True)),
                ('right_eye_near_sph', models.CharField(blank=True, max_length=10, null=True)),
                ('left_eye_dist_sph', models.CharField(blank=True, max_length=10, null=True)),
                ('left_eye_dist_cyl', models.CharField(blank=True, max_length=10, null=True)),
                ('left_eye_dist_axis', models.CharField(blank=True, max_length=10, null=True)),
                ('left_eye_near_sph', models.CharField(blank=True, max_length=10, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('cataract', models.BooleanField(default=False)),
                ('blepharitis', models.BooleanField(default=False)),
                ('refraction_remark', models.CharField(blank=True, max_length=100, null=True)),
                ('shuger', models.BooleanField(default=False)),
                ('prescription_type', models.CharField(choices=[('internal', 'Internal Prescription'), ('vision_plus', 'Vision Plus Prescription'), ('other', 'Other Prescription')], default='internal', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refraction_details', to='api.patient')),
                ('refraction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refraction_details', to='api.refraction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refraction_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SolderingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('ready', 'Ready'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_status', models.CharField(choices=[('received_from_customer', 'Received from Customer'), ('issue_to_factory', 'Issued to Factory'), ('received_from_factory', 'Received from Factory'), ('issue_to_customer', 'Issued to Customer')], default='received_from_customer', max_length=30)),
                ('progress_status_updated_at', models.DateTimeField(auto_now=True)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('order_updated_date', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soldering_orders', to='api.branch')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soldering_orders', to='api.patient')),
            ],
        ),
        migrations.CreateModel(
            name='SolderingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('cash', 'Cash'), ('online_transfer', 'Online Transfer')], max_length=30)),
                ('transaction_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('is_final_payment', models.BooleanField(default=False)),
                ('is_partial', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='api.solderingorder')),
                ('payment_method_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='soldering_order_payments', to='api.paymentmethodbanks')),
            ],
        ),
        migrations.CreateModel(
            name='SolderingInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('invoice_date', models.DateField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='api.solderingorder')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Booked', 'Booked'), ('Unavailable', 'Unavailable'), ('DOCTOR', 'Doctor')], default='Available', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='api.branch')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='api.doctor')),
            ],
            options={
                'unique_together': {('doctor', 'branch', 'date', 'start_time', 'status', 'is_deleted')},
            },
        ),
        migrations.CreateModel(
            name='SafeTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('deposit', 'Bank Deposit')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('reason', models.TextField(blank=True, null=True)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safe_transactions', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='SafeBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('branch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='safe_balance', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='RefractionDetailsAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refraction_details_audit_logs_as_admin', to=settings.AUTH_USER_MODEL)),
                ('refraction_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='api.refractiondetails')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refraction_details_audit_logs_as_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_audit_logs', to='api.patient')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_audit_log', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OtherItemStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_count', models.PositiveIntegerField()),
                ('qty', models.PositiveIntegerField()),
                ('limit', models.PositiveIntegerField(default=0)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='other_item_stocks', to='api.branch')),
                ('other_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='api.otheritem')),
            ],
        ),
        migrations.CreateModel(
            name='OtherIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='other_incomes', to='api.otherincomecategory')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_status', models.CharField(choices=[('received_from_customer', 'Received from Customer'), ('issue_to_factory', 'Issued to Factory'), ('received_from_factory', 'Received from Factory'), ('issue_to_customer', 'Issued to Customer')], max_length=30)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_progress_status', to='api.order')),
            ],
            options={
                'ordering': ['changed_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('cash', 'Cash'), ('online_transfer', 'Online Transfer')], max_length=20)),
                ('transaction_status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('is_final_payment', models.BooleanField(default=False)),
                ('is_partial', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_order_payments', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderpayment_set', to='api.order')),
                ('payment_method_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_payments', to='api.paymentmethodbanks')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_order_payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemWhatsAppLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('mnt_marked', 'Mnt Marked')], default='sent', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whatsapp_logs', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_reminder_at', models.DateTimeField(blank=True, null=True)),
                ('next_service_date', models.DateField(blank=True, null=True)),
                ('serial_no', models.CharField(blank=True, max_length=100, null=True)),
                ('battery', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_non_stock', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_order_items', to=settings.AUTH_USER_MODEL)),
                ('external_lens', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='api.externallens')),
                ('frame', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='api.frame')),
                ('hearing_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='api.hearingitem')),
                ('lens', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='api.lens')),
                ('lens_cleaner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='api.lenscleaner')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='api.order')),
                ('other_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='api.otheritem')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_order_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=api.models.OrderImage.get_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_images', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_feedback', to='api.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_feedback', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_audit_logs_as_admin', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_audit_logs', to='api.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_audit_logs_as_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.patient'),
        ),
        migrations.AddField(
            model_name='order',
            name='issued_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='refraction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.refraction'),
        ),
        migrations.AddField(
            model_name='order',
            name='sales_staff_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LensStockHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('add', 'Add'), ('transfer', 'Transfer'), ('remove', 'Remove')], max_length=10)),
                ('quantity_changed', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lens_stock_histories', to='api.branch')),
                ('lens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_histories', to='api.lens')),
                ('transfer_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lens_stock_transfers', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='LensStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_count', models.IntegerField(blank=True, null=True)),
                ('qty', models.IntegerField(default=0)),
                ('limit', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='api.branch')),
                ('lens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='api.lens')),
            ],
        ),
        migrations.CreateModel(
            name='LensPower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=5)),
                ('side', models.CharField(blank=True, choices=[('left', 'Left'), ('right', 'Right')], max_length=10, null=True)),
                ('lens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lens_powers', to='api.lens')),
                ('power', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lens_powers', to='api.power')),
            ],
        ),
        migrations.CreateModel(
            name='LensCleanerStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_count', models.IntegerField(blank=True, null=True)),
                ('qty', models.IntegerField(default=0)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lens_cleaner_stocks', to='api.branch')),
                ('lens_cleaner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='api.lenscleaner')),
            ],
        ),
        migrations.AddField(
            model_name='lens',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lenses', to='api.lensetype'),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_type', models.CharField(choices=[('factory', 'Factory Invoice'), ('manual', 'Manual Invoice'), ('normal', 'Normal Invoice'), ('hearing', 'Hearing')], max_length=10)),
                ('daily_invoice_no', models.CharField(blank=True, max_length=10, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='HearingOrderItemService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_service_date', models.DateField()),
                ('scheduled_service_date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hearing_order_services', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='HearingItemStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_count', models.PositiveIntegerField()),
                ('qty', models.PositiveIntegerField()),
                ('limit', models.PositiveIntegerField(default=0)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hearing_item_stocks', to='api.branch')),
                ('hearing_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='api.hearingitem')),
            ],
        ),
        migrations.CreateModel(
            name='FrameStockHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('add', 'Add'), ('transfer', 'Transfer'), ('remove', 'Remove')], max_length=10)),
                ('quantity_changed', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_frame_stock', to='api.branch')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_histories', to='api.frame')),
                ('transfer_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frame_stock_transfers', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='FrameStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0)),
                ('initial_count', models.IntegerField(blank=True, null=True)),
                ('limit', models.IntegerField(default=0)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frame_stocks', to='api.branch')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='api.frame')),
            ],
        ),
        migrations.AddField(
            model_name='frame',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.frameimage'),
        ),
        migrations.AddField(
            model_name='frame',
            name='initial_branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initial_frames', to='api.branch'),
        ),
        migrations.AddField(
            model_name='externallens',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_lenses', to='api.externallensbrand'),
        ),
        migrations.AddField(
            model_name='externallens',
            name='coating',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_lenses', to='api.externallenscoating'),
        ),
        migrations.AddField(
            model_name='externallens',
            name='lens_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_lenses', to='api.lensetype'),
        ),
        migrations.CreateModel(
            name='ExpenseSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('main_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='api.expensemaincategory')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_source', models.CharField(choices=[('safe', 'Safe'), ('cash', 'Cash'), ('bank', 'Bank')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField(blank=True)),
                ('paid_from_safe', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_refund', models.BooleanField(default=False)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
                ('main_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.expensemaincategory')),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.expensesubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_source', models.CharField(choices=[('safe', 'Safe'), ('cash', 'Cash'), ('bank', 'Bank')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField(blank=True)),
                ('paid_from_safe', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_refund', models.BooleanField(default=False)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
                ('main_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.expensemaincategory')),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.expensesubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorClaimInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_claim_invoices', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorClaimChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_claim_channels', to='api.branch')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_claim_channels', to='api.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorBranchChannelFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('branch_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_branch_channel_fees', to='api.branch')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_branch_channel_fees', to='api.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('cash', 'Cash'), ('online_transfer', 'Online Transfer')], max_length=20)),
                ('is_final', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='api.appointment')),
                ('payment_method_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='channel_order_payments', to='api.paymentmethodbanks')),
            ],
        ),
        migrations.CreateModel(
            name='BankDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('is_confirmed', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to='api.bankaccount')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
            ],
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branch'),
        ),
        migrations.CreateModel(
            name='ArrivalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_status', models.CharField(choices=[('mnt_marked', 'Mnt Marked'), ('recived', 'Recived')], default='recived', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrival_status', to='api.order')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.branch'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.schedule'),
        ),
        migrations.CreateModel(
            name='UserBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_users', to='api.branch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_branches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='MntOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mnt_number', models.CharField(max_length=20)),
                ('mnt_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mnt_orders_admin', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mnt_orders_branch', to='api.branch')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mnt_orders', to='api.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mnt_orders_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
                'unique_together': {('order', 'mnt_number', 'branch')},
            },
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.UniqueConstraint(fields=('invoice_number',), name='unique_invoice_number'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('invoice_date', 'daily_invoice_no')},
        ),
        migrations.AlterUniqueTogether(
            name='frame',
            unique_together={('brand', 'code', 'color')},
        ),
        migrations.AddConstraint(
            model_name='externallens',
            constraint=models.UniqueConstraint(fields=('lens_type', 'coating', 'brand', 'branded'), name='unique_external_lens_combination'),
        ),
        migrations.AlterUniqueTogether(
            name='externallens',
            unique_together={('lens_type', 'coating', 'brand')},
        ),
        migrations.AlterUniqueTogether(
            name='expensesubcategory',
            unique_together={('main_category', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='doctorbranchchannelfees',
            unique_together={('doctor', 'branch')},
        ),
        migrations.AlterUniqueTogether(
            name='code',
            unique_together={('brand', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('branch', 'invoice_number')},
        ),
    ]
